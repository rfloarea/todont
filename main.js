(()=>{"use strict";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{K:()=>e});const e=(()=>{let t=localStorage.getItem("itemArray");if(t){let e=[...JSON.parse(t)];return console.table(e),e}return[]})();class o{constructor(t,e,o,r){this.title=t,this.description=e,this.duration=o,this.importance=r}getTitle(){return this.title}setTitle(t){return this.title=t}}var r;r=(()=>{let t=prompt("What don't you want to do?"),e=prompt("What is your reason?"),r=prompt("For how long will you not do this?"),i=prompt("How important is this?");const s=new o(t,e,r,i);return console.table(s),s})(),e.push(r),localStorage.setItem("itemArray",JSON.stringify(e)),console.table(e)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQ0EsSUFBSUEsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNDLEVBQVNDLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEYsRUFBb0JJLEVBQUVGLEVBQVlDLEtBQVNILEVBQW9CSSxFQUFFSCxFQUFTRSxJQUM1RUUsT0FBT0MsZUFBZUwsRUFBU0UsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRILEVBQXdCLENBQUNTLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEksa0JDUTNFLE1BQU1JLEVBQWEsTUFDdEIsSUFBSUMsRUFBV0MsYUFBYUMsUUFBUSxhQUVwQyxHQUFJRixFQUFVLENBQ1YsSUFDSUcsRUFBWSxJQURDQyxLQUFLQyxNQUFNTCxJQUc1QixPQURBTSxRQUFRQyxNQUFNSixHQUNQQSxDQUNYLENBQ0ksTUFBTyxFQUVkLEVBWHlCLEdBYzFCLE1BQU1LLEVBQ0YsV0FBQUMsQ0FBYUMsRUFBT0MsRUFBYUMsRUFBVUMsR0FDdkNDLEtBQUtKLE1BQVFBLEVBQ2JJLEtBQUtILFlBQWNBLEVBQ25CRyxLQUFLRixTQUFXQSxFQUNoQkUsS0FBS0QsV0FBYUEsQ0FDdEIsQ0FDQSxRQUFBRSxHQUNJLE9BQU9ELEtBQUtKLEtBQ2hCLENBQ0EsUUFBQU0sQ0FBU0MsR0FDTCxPQUFPSCxLQUFLSixNQUFRTyxDQUN4QixFQ2hDSixJQUErQnZCLElEbUNmLE1BQ1osSUFBSWdCLEVBQVFRLE9BQU8sOEJBQ2ZQLEVBQWNPLE9BQU8sd0JBQ3JCTixFQUFXTSxPQUFPLHNDQUNsQkwsRUFBYUssT0FBTywwQkFDeEIsTUFBTUMsRUFBVSxJQUFJWCxFQUFPRSxFQUFPQyxFQUFhQyxFQUFVQyxHQUV6RCxPQURBUCxRQUFRQyxNQUFNWSxHQUNQQSxDQUNWLEVBUmUsR0NqQ1pwQixFQUFXcUIsS0FBSzFCLEdBR2hCTyxhQUFhb0IsUUFBUSxZQUFhakIsS0FBS2tCLFVBQVV2QixJRHlDckRPLFFBQVFDLE1BQU1SLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbnQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kb250L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvbnQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvbnQvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb250Ly4vc3JjL2FkZEl0ZW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJpbXBvcnQgeyBhZGRJdGVtVG9Mb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9hZGRJdGVtXCI7XG5cbi8vIGV4cG9ydCBsZXQgaXRlbUFycmF5ID0gW107IC8vIHRoaXMgbmVlZCB0byBjb21lIGZyb20gbG9jYWxTdG9yYWdlISEhXG5cbi8vIGluaXRpYWxpemUgb3VyIGFycmF5IG9yIGdldCBpdCBmcm9tIGxvY2FsIHN0b3JhZ2VcblxuLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubG9hZCcsIGl0ZW1BcnJheSk7XG5cbmV4cG9ydCBjb25zdCBzdG9yZWREYXRhID0gKCgpID0+IHtcbiAgICBsZXQgdXNlckRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaXRlbUFycmF5JylcblxuICAgIGlmICh1c2VyRGF0YSkgeyAgIFxuICAgICAgICBsZXQgaXRlbVN0cmluZyA9IEpTT04ucGFyc2UodXNlckRhdGEpXG4gICAgICAgIGxldCBpdGVtQXJyYXkgPSBbLi4uaXRlbVN0cmluZ107XG4gICAgICAgIGNvbnNvbGUudGFibGUoaXRlbUFycmF5KTtcbiAgICAgICAgcmV0dXJuIGl0ZW1BcnJheTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufSkoKTtcblxuXG5jbGFzcyBUb2RvbnQge1xuICAgIGNvbnN0cnVjdG9yICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1cmF0aW9uLCBpbXBvcnRhbmNlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247XG4gICAgICAgIHRoaXMuaW1wb3J0YW5jZSA9IGltcG9ydGFuY2U7XG4gICAgfVxuICAgIGdldFRpdGxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50aXRsZTtcbiAgICB9XG4gICAgc2V0VGl0bGUobmV3VGl0bGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGUgPSBuZXdUaXRsZTtcbiAgICB9XG59O1xuXG5jb25zdCBuZXdJdGVtID0gKCgpID0+IHtcbiAgICBsZXQgdGl0bGUgPSBwcm9tcHQoXCJXaGF0IGRvbid0IHlvdSB3YW50IHRvIGRvP1wiKTtcbiAgICBsZXQgZGVzY3JpcHRpb24gPSBwcm9tcHQoXCJXaGF0IGlzIHlvdXIgcmVhc29uP1wiKTtcbiAgICBsZXQgZHVyYXRpb24gPSBwcm9tcHQoXCJGb3IgaG93IGxvbmcgd2lsbCB5b3Ugbm90IGRvIHRoaXM/XCIpO1xuICAgIGxldCBpbXBvcnRhbmNlID0gcHJvbXB0KFwiSG93IGltcG9ydGFudCBpcyB0aGlzP1wiKTtcbiAgICBjb25zdCBuZXdJdGVtID0gbmV3IFRvZG9udCh0aXRsZSwgZGVzY3JpcHRpb24sIGR1cmF0aW9uLCBpbXBvcnRhbmNlKTtcbiAgICBjb25zb2xlLnRhYmxlKG5ld0l0ZW0pO1xuICAgIHJldHVybiBuZXdJdGVtO1xufSkoKTtcblxuYWRkSXRlbVRvTG9jYWxTdG9yYWdlKG5ld0l0ZW0pO1xuY29uc29sZS50YWJsZShzdG9yZWREYXRhKTsiLCJpbXBvcnQgeyBzdG9yZWREYXRhIH0gZnJvbSBcIi5cIjtcblxuZnVuY3Rpb24gYWRkSXRlbVRvTG9jYWxTdG9yYWdlKG9iaikge1xuICAgIC8vIGFkZCBvdXIgbmV3IGl0ZW0gdG8gb3VyIGFycmF5XG4gICAgc3RvcmVkRGF0YS5wdXNoKG9iaik7ICAgIFxuICAgIC8vIGNvbnNvbGUudGFibGUoaXRlbUFycmF5KTtcbiAgICAvLyB0aGVuIHN0b3JlIHN0cmluZ2lmaWVkIGFycmF5XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2l0ZW1BcnJheScsIEpTT04uc3RyaW5naWZ5KHN0b3JlZERhdGEpKTtcbn1cblxuZXhwb3J0IHsgYWRkSXRlbVRvTG9jYWxTdG9yYWdlIH07Il0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic3RvcmVkRGF0YSIsInVzZXJEYXRhIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIml0ZW1BcnJheSIsIkpTT04iLCJwYXJzZSIsImNvbnNvbGUiLCJ0YWJsZSIsIlRvZG9udCIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1cmF0aW9uIiwiaW1wb3J0YW5jZSIsInRoaXMiLCJnZXRUaXRsZSIsInNldFRpdGxlIiwibmV3VGl0bGUiLCJwcm9tcHQiLCJuZXdJdGVtIiwicHVzaCIsInNldEl0ZW0iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9